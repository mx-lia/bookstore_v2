[{"D:\\Study\\bookstore\\bookstore-frontend\\src\\index.js":"1","D:\\Study\\bookstore\\bookstore-frontend\\src\\app\\App.js":"2","D:\\Study\\bookstore\\bookstore-frontend\\src\\serviceWorker.js":"3","D:\\Study\\bookstore\\bookstore-frontend\\src\\app\\AdminApp.js":"4","D:\\Study\\bookstore\\bookstore-frontend\\src\\app\\CustomerApp.js":"5","D:\\Study\\bookstore\\bookstore-frontend\\src\\context\\customerContext.js":"6","D:\\Study\\bookstore\\bookstore-frontend\\src\\context\\alertContext.js":"7","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\alertActions.js":"8","D:\\Study\\bookstore\\bookstore-frontend\\src\\context\\shoppingCartContext.js":"9","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\ShoppingCart.js":"10","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Home.js":"11","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Admin\\AdminLogin.js":"12","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Login.js":"13","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\OrderCheckout.js":"14","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\BookDetails.js":"15","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Admin\\AdminDashboard.js":"16","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\customerActions.js":"17","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Admin\\DashboardBook.js":"18","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\Account.js":"19","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Books.js":"20","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\PrivateRoutes\\AdminPrivateRoute.js":"21","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Alert.js":"22","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\PrivateRoutes\\UserPrivateRoute.js":"23","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\GeneralLayout\\Footer.js":"24","D:\\Study\\bookstore\\bookstore-frontend\\src\\reducers\\customerReducer.js":"25","D:\\Study\\bookstore\\bookstore-frontend\\src\\reducers\\alertReducer.js":"26","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\GeneralLayout\\Header.js":"27","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\shoppingCartActions.js":"28","D:\\Study\\bookstore\\bookstore-frontend\\src\\reducers\\shoppingCartReducer.js":"29","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\bookActions.js":"30","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\favouriteBookActions.js":"31","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookCard.js":"32","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\DataGrid.js":"33","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\OrderHistory.js":"34","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\PersonalInfo.js":"35","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\serverCall.js":"36","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\Favourites.js":"37","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\NoResults.js":"38","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\genreActions.js":"39","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Pagination.js":"40","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ForbiddenPage.js":"41","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ShoppingCart\\ShoppingCartItem.js":"42","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\AdminLayout\\AdminHeader.js":"43","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ShoppingCart\\EmptyCart.js":"44","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\OrderForm\\OrderForm.js":"45","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\AdminLayout\\CardButton.js":"46","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\GeneralLayout\\Search.js":"47","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\BookForm.js":"48","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\orderActions.js":"49","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ShoppingCart\\QuantityControl.js":"50","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Account\\OrderCard.js":"51","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\OrderForm\\form-config.js":"52","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\publisherActions.js":"53","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\form-config.js":"54","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\authorActions.js":"55","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Account\\FavouriteCard.js":"56","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\form-components\\Select.js":"57","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\form-components\\DatePicker.js":"58","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Account\\OrderItem.js":"59"},{"size":572,"mtime":1604651852882,"results":"60","hashOfConfig":"61"},{"size":820,"mtime":1607284661382,"results":"62","hashOfConfig":"61"},{"size":5227,"mtime":1604651852885,"results":"63","hashOfConfig":"61"},{"size":1077,"mtime":1605193817936,"results":"64","hashOfConfig":"61"},{"size":1488,"mtime":1607284611207,"results":"65","hashOfConfig":"61"},{"size":1112,"mtime":1607286384566,"results":"66","hashOfConfig":"61"},{"size":709,"mtime":1607291505914,"results":"67","hashOfConfig":"61"},{"size":271,"mtime":1607291517508,"results":"68","hashOfConfig":"61"},{"size":1627,"mtime":1607286368191,"results":"69","hashOfConfig":"61"},{"size":2056,"mtime":1607365760956,"results":"70","hashOfConfig":"61"},{"size":1423,"mtime":1607366161622,"results":"71","hashOfConfig":"61"},{"size":3024,"mtime":1607368081244,"results":"72","hashOfConfig":"61"},{"size":5978,"mtime":1607287568669,"results":"73","hashOfConfig":"61"},{"size":3083,"mtime":1607365768503,"results":"74","hashOfConfig":"61"},{"size":5446,"mtime":1607366147189,"results":"75","hashOfConfig":"61"},{"size":3148,"mtime":1607286239790,"results":"76","hashOfConfig":"61"},{"size":2030,"mtime":1608059751871,"results":"77","hashOfConfig":"61"},{"size":864,"mtime":1607282786549,"results":"78","hashOfConfig":"61"},{"size":2078,"mtime":1604651852882,"results":"79","hashOfConfig":"61"},{"size":8865,"mtime":1608064736495,"results":"80","hashOfConfig":"61"},{"size":619,"mtime":1605620283993,"results":"81","hashOfConfig":"61"},{"size":679,"mtime":1607366056548,"results":"82","hashOfConfig":"61"},{"size":618,"mtime":1605620274984,"results":"83","hashOfConfig":"61"},{"size":421,"mtime":1604651852879,"results":"84","hashOfConfig":"61"},{"size":487,"mtime":1607367432362,"results":"85","hashOfConfig":"61"},{"size":520,"mtime":1607291602905,"results":"86","hashOfConfig":"61"},{"size":3341,"mtime":1604651852879,"results":"87","hashOfConfig":"61"},{"size":3566,"mtime":1607806743412,"results":"88","hashOfConfig":"61"},{"size":1346,"mtime":1604651852885,"results":"89","hashOfConfig":"61"},{"size":3279,"mtime":1608059745737,"results":"90","hashOfConfig":"61"},{"size":892,"mtime":1608059753238,"results":"91","hashOfConfig":"61"},{"size":1103,"mtime":1607365673106,"results":"92","hashOfConfig":"61"},{"size":3482,"mtime":1608064127041,"results":"93","hashOfConfig":"61"},{"size":764,"mtime":1607365756174,"results":"94","hashOfConfig":"61"},{"size":9568,"mtime":1604651852883,"results":"95","hashOfConfig":"61"},{"size":1110,"mtime":1607812882555,"results":"96","hashOfConfig":"61"},{"size":827,"mtime":1607365705719,"results":"97","hashOfConfig":"61"},{"size":383,"mtime":1604651852879,"results":"98","hashOfConfig":"61"},{"size":578,"mtime":1608059754282,"results":"99","hashOfConfig":"61"},{"size":1974,"mtime":1607366075277,"results":"100","hashOfConfig":"61"},{"size":323,"mtime":1604651852879,"results":"101","hashOfConfig":"61"},{"size":3610,"mtime":1607366133513,"results":"102","hashOfConfig":"61"},{"size":1241,"mtime":1604651852877,"results":"103","hashOfConfig":"61"},{"size":335,"mtime":1604651852881,"results":"104","hashOfConfig":"61"},{"size":6265,"mtime":1607286229051,"results":"105","hashOfConfig":"61"},{"size":506,"mtime":1604651852877,"results":"106","hashOfConfig":"61"},{"size":869,"mtime":1604651852879,"results":"107","hashOfConfig":"61"},{"size":14655,"mtime":1607368701504,"results":"108","hashOfConfig":"61"},{"size":713,"mtime":1608059755486,"results":"109","hashOfConfig":"61"},{"size":1334,"mtime":1604651852881,"results":"110","hashOfConfig":"61"},{"size":984,"mtime":1607366084525,"results":"111","hashOfConfig":"61"},{"size":781,"mtime":1604651852880,"results":"112","hashOfConfig":"61"},{"size":562,"mtime":1608059756871,"results":"113","hashOfConfig":"61"},{"size":1567,"mtime":1604934085712,"results":"114","hashOfConfig":"61"},{"size":668,"mtime":1608059734067,"results":"115","hashOfConfig":"61"},{"size":2583,"mtime":1607366079293,"results":"116","hashOfConfig":"61"},{"size":1658,"mtime":1607286227525,"results":"117","hashOfConfig":"61"},{"size":814,"mtime":1604651852878,"results":"118","hashOfConfig":"61"},{"size":1774,"mtime":1607366089760,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1dpd1x7",{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"122"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"138","usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"122"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"122"},"D:\\Study\\bookstore\\bookstore-frontend\\src\\index.js",[],["252","253"],"D:\\Study\\bookstore\\bookstore-frontend\\src\\app\\App.js",["254","255"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport CustomerApp from \"./CustomerApp\";\r\nimport AdminApp from \"./AdminApp\";\r\n\r\nimport CustomerProvider from \"../context/customerContext\";\r\nimport AlertProvider from \"../context/alertContext\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"d-flex flex-column min-vh-100\">\r\n      <Router>\r\n        <AlertProvider>\r\n          <CustomerProvider>\r\n            <Switch>\r\n              <Route path=\"/admin\">\r\n                <AdminApp />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <CustomerApp />\r\n              </Route>\r\n            </Switch>\r\n          </CustomerProvider>\r\n        </AlertProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\serviceWorker.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\app\\AdminApp.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\app\\CustomerApp.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\context\\customerContext.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\context\\alertContext.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\alertActions.js",["256","257"],"export const addAlert = (dispatch) => ({ type: type, message: message }) => {\r\n    dispatch({ type: \"ADD\", payload: { type: type, message: message, } });\r\n};\r\n\r\nexport const removeAlert = (dispatch) => (id) => {\r\n    dispatch({ type: \"REMOVE\", payload: { id: id } });\r\n};","D:\\Study\\bookstore\\bookstore-frontend\\src\\context\\shoppingCartContext.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\ShoppingCart.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Home.js",["258"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { Container, Jumbotron, Row, Col } from \"react-bootstrap\";\r\n\r\nimport BookCard from \"../components/BookCard\";\r\n\r\nimport { getBooks } from \"../actions/bookActions\";\r\n\r\nimport { Context } from \"../context/alertContext\";\r\n\r\nconst Home = () => {\r\n  const { addAlert } = useContext(Context);\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { books } = await getBooks({ limit: 6, page: 1 }, addAlert);\r\n      setBooks(books);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid as=\"main\" className=\"my-3\" role=\"main\">\r\n      <Jumbotron className=\"text-light\">\r\n        <Col md={6}>\r\n          <h1 className=\"display-4 font-italic\">Read around the world</h1>\r\n          <p className=\"lead\">\r\n            Book Livraria is a leading international book retailer with a unique\r\n            offer over 20 million books and free delivery worldwide (with no\r\n            minimum spend).\r\n          </p>\r\n        </Col>\r\n      </Jumbotron>\r\n      <div className=\"d-block panel shadow-sm\">\r\n        <Row xs={2} md={4} xl={6} className=\"px-3\">\r\n          {books?.map((book) => (\r\n            <Col key={book.isbn} xs={6} md={3} xl={2} className=\"my-2\">\r\n              <BookCard book={book} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Admin\\AdminLogin.js",["259","260"],"import React, { useContext } from \"react\";\r\n\r\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Alert from \"../../components/Alert\";\r\nimport Logo from \"../../assets/book.svg\";\r\n\r\nimport { Context as CustomerContext } from \"../../context/customerContext\";\r\nimport { Context } from \"../../context/alertContext\";\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nconst AdminLogin = () => {\r\n  const { signIn } = useContext(CustomerContext);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"align-self-center\">\r\n        <Col></Col>\r\n        <Col xs={12} md>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={async (values, actions) => {\r\n              const res = await signIn(values);\r\n              actions.setSubmitting(false);\r\n              if (res != null)\r\n              {\r\n                window.location.href = \"/admin/dashboard\";\r\n              }\r\n            }}\r\n          >\r\n            {({ handleChange, handleSubmit, values, errors, isSubmitting }) => (\r\n              <Form\r\n                className=\"panel p-3 mt-3 shadow\"\r\n                noValidate\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <div className=\"text-center my-2\">\r\n                  <Image width=\"100px\" src={Logo} />\r\n                </div>\r\n                <h1 className=\"h3 mb-3 font-weight-normal text-center\">\r\n                  Please sign in\r\n                </h1>\r\n                <Form.Group>\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button block type=\"submit\" disabled={isSubmitting}>\r\n                  Sign in\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Login.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\OrderCheckout.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\BookDetails.js",["261"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\n\r\nimport { ReactComponent as AvailableIcon } from \"../assets/available.svg\";\r\nimport { ReactComponent as NotAvailableIcon } from \"../assets/not-available.svg\";\r\nimport { ReactComponent as ShippingIcon } from \"../assets/shipping.svg\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Context as CustomerContext } from \"../context/customerContext\";\r\nimport { Context as ShoppingCartContext } from \"../context/shoppingCartContext\";\r\nimport { Context } from \"../context/alertContext\";\r\n\r\nimport { getBook } from \"../actions/bookActions\";\r\nimport { createFavourite } from \"../actions/favouriteBookActions\";\r\n\r\nimport noImage from \"../assets/noimage.png\";\r\n\r\nconst BookDetails = () => {\r\n  const { addAlert } = useContext(Context);\r\n  const [book, setBook] = useState();\r\n  const [inCart, setInCart] = useState(false);\r\n  const {\r\n    state: { user },\r\n  } = useContext(CustomerContext);\r\n  const { addItem, isInCart } = useContext(ShoppingCartContext);\r\n\r\n  const { isbn } = useParams();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setBook(await getBook(isbn, addAlert));\r\n    })();\r\n    setInCart(isInCart(isbn));\r\n  }, [isbn]);\r\n\r\n  return (\r\n    <Container fluid as=\"main\" className=\"my-3\" role=\"main\">\r\n      {book && (\r\n        <Row>\r\n          <Col className=\"mb-1\">\r\n            <div className=\"border p-2\" color=\"#666\">\r\n              <span>Categories: </span>\r\n              {book.bookGenres?.map((bookGenre) => (\r\n                <span key={bookGenre.genre.id}>{bookGenre.genre.name} / </span>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {book && (\r\n        <Row className=\"mx-0\">\r\n          <Col xs={12} md={9} className=\"panel mr-md-2 shadow-sm\">\r\n            <Row>\r\n              <Col xs={12} md={4} className=\"text-center\">\r\n                <Image\r\n                  thumbnail\r\n                  src={book.src ? book.src : noImage}\r\n                  className=\"border-0 rounded-0\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={8}>\r\n                <h4 className=\"pt-3 pb-1 border-bottom\">{book.title}</h4>\r\n                <h5>\r\n                  By\r\n                  {book.bookAuthors?.map(\r\n                  (bookAuthor) =>\r\n                    ` ${bookAuthor.author.firstName} ${bookAuthor.author.lastName},`\r\n                )}\r\n                </h5>\r\n                <div>{book.description}</div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={12} md className=\"px-0\">\r\n            <div className=\"panel d-flex flex-column px-3 shadow-sm\">\r\n              <h3 className=\"border-bottom text-pink py-3\">{book.price}$</h3>\r\n              <div className=\"d-inline-flex align-items-center font-weight-bold my-3\">\r\n                <ShippingIcon width=\"32\" height=\"32\" className=\"mr-1\" />\r\n                Free delivery worldwide\r\n              </div>\r\n              {book.availableQuantity === 0 ? (\r\n                <div className=\"d-inline-flex align-items-center my-3\">\r\n                  <NotAvailableIcon width=\"32\" height=\"32\" className=\"mr-1\" />\r\n                  Out of stock\r\n                </div>\r\n              ) : (\r\n                  <div className=\"d-inline-flex align-items-center my-3\">\r\n                    <AvailableIcon width=\"32\" height=\"32\" className=\"mr-1\" />\r\n                  In stock\r\n                  </div>\r\n                )}\r\n              <div className=\"border-top py-3\">\r\n                <Button\r\n                  className=\"w-100 mt-2\"\r\n                  disabled={\r\n                    book.availableQuantity === 0 || inCart ? true : false\r\n                  }\r\n                  onClick={() => {\r\n                    addItem(book);\r\n                    setInCart(true);\r\n                  }}\r\n                >\r\n                  {inCart ? \"Book is already in cart\" : \"Add to cart\"}\r\n                </Button>\r\n                <Button\r\n                  variant=\"light\"\r\n                  className=\"w-100 mt-2\"\r\n                  disabled={user ? false : true}\r\n                  onClick={() => createFavourite(book.isbn, addItem)}\r\n                >\r\n                  {user\r\n                    ? \"Add to favourites\"\r\n                    : \"Favourites is blocked for guests\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {book && (\r\n        <Row className=\"panel mx-0 mt-2 pb-3 shadow-sm\">\r\n          <h5 className=\"border-bottom w-100 mx-3 py-3\">Book details</h5>\r\n          <Col xs={12} md={6}>\r\n            <p>\r\n              <strong>Format</strong>: {book.format} | {book.pages} pages\r\n            </p>\r\n            <p>\r\n              <strong>Publication date</strong>: {book.publicationDate}\r\n            </p>\r\n            <p>\r\n              <strong>Publisher</strong>:\r\n              {book.bookPublishers?.map(\r\n                (bookPublisher) => ` ${bookPublisher.publisher.name},`\r\n              )}\r\n            </p>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <p>\r\n              <strong>Language</strong>: {book.language}\r\n            </p>\r\n            <p>\r\n              <strong>ISBN</strong>: {book.isbn}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BookDetails;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Admin\\AdminDashboard.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\customerActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Admin\\DashboardBook.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\Account.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Books.js",["262","263"],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\PrivateRoutes\\AdminPrivateRoute.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Alert.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\PrivateRoutes\\UserPrivateRoute.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\GeneralLayout\\Footer.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\reducers\\customerReducer.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\reducers\\alertReducer.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\GeneralLayout\\Header.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\shoppingCartActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\reducers\\shoppingCartReducer.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\bookActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\favouriteBookActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookCard.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\DataGrid.js",["264","265"],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\OrderHistory.js",["266"],"import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport OrderCard from \"../../components/Account/OrderCard\";\r\n\r\nimport { getOrders } from \"../../actions/orderActions\";\r\n\r\nimport { Context } from \"../../context/alertContext\";\r\n\r\nconst History = () => {\r\n  const { addAlert } = useContext(Context);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setOrders(await getOrders(addAlert));\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"panel shadow-sm py-2 px-3\">\r\n      <div className=\"border-bottom\">\r\n        <h5>Order history</h5>\r\n      </div>\r\n      {orders?.map((order) => (\r\n        <OrderCard key={order.id} order={order} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\PersonalInfo.js",["267"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { Row, Col, Form, InputGroup, Button } from \"react-bootstrap\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { Context as CustomerContext } from \"../../context/customerContext\";\r\n\r\nconst customerSchema = yup.object({\r\n  firstName: yup.string().required(\"Permission type is required\"),\r\n  lastName: yup.string().required(\"Permission type is required\"),\r\n  email: yup.string().required(\"Permission type is required\"),\r\n  postalCode: yup.string().nullable(),\r\n  country: yup.string().nullable(),\r\n  city: yup.string().nullable(),\r\n  street: yup.string().nullable(),\r\n  buildingNo: yup.string().nullable(),\r\n  flatNo: yup.string().nullable(),\r\n  phoneNumber: yup.string().nullable(),\r\n});\r\n\r\nconst PersonalInfo = () => {\r\n  const {\r\n    state: { user },\r\n    setCurrentCustomer,\r\n    updateCustomer,\r\n  } = useContext(CustomerContext);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await setCurrentCustomer();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"panel shadow-sm py-2 px-3\">\r\n      <div className=\"border-bottom\">\r\n        <h5>Personal info</h5>\r\n      </div>\r\n      {user && (\r\n        <div className=\"mt-2\">\r\n          <Formik\r\n            onSubmit={async (values, actions) => {\r\n              await updateCustomer(values);\r\n              actions.setSubmitting(false);\r\n              actions.resetForm();\r\n            }}\r\n            initialValues={user}\r\n            validationSchema={customerSchema}\r\n            enableReinitialize={true}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              resetForm,\r\n              isSubmitting,\r\n              values,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate autoComplete=\"false\" onSubmit={handleSubmit}>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    First name\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      value={values.firstName || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.firstName}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.firstName}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Last name\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      value={values.lastName || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.lastName}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.lastName}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Email\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      value={values.email || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Country\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"country\"\r\n                      type=\"text\"\r\n                      value={values.country || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.country}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.country}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    City\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"city\"\r\n                      type=\"text\"\r\n                      value={values.city || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.city}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.city}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Street\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"street\"\r\n                      type=\"text\"\r\n                      value={values.street || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.street}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.street}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Building No.\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"buildingNo\"\r\n                      type=\"text\"\r\n                      value={values.buildingNo || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.buildingNo}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.buildingNo}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Flat No.\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"flatNo\"\r\n                      type=\"text\"\r\n                      value={values.flatNo || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.flatNo}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.flatNo}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Postal Code\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <Form.Control\r\n                      name=\"postalCode\"\r\n                      type=\"text\"\r\n                      value={values.postalCode || \"\"}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.postalCode}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.postalCode}\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}>\r\n                    Phone\r\n                  </Form.Label>\r\n                  <Col lg={9}>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>+375</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"phoneNumber\"\r\n                        type=\"text\"\r\n                        value={values.phoneNumber}\r\n                        onChange={handleChange}\r\n                        isInvalid={!!errors.phoneNumber}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.phoneNumber}\r\n                      </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label column lg={3}></Form.Label>\r\n                  <Col lg={9}>\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      type=\"reset\"\r\n                      onClick={resetForm}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"ml-1\"\r\n                    >\r\n                      Save changes\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\serverCall.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\pages\\Account\\Favourites.js",["268"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport FavouriteCard from \"../../components/Account/FavouriteCard\";\r\n\r\nimport { getFavourites } from \"../../actions/favouriteBookActions\";\r\n\r\nimport { Context } from \"../../context/alertContext\";\r\n\r\nconst Favourites = () => {\r\n  const { addAlert } = useContext(Context);\r\n  const [favourites, setFavourites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setFavourites(await getFavourites(addAlert));\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"panel shadow-sm py-2 px-3\">\r\n      <div className=\"border-bottom\">\r\n        <h5>Favourites</h5>\r\n      </div>\r\n      {favourites?.map((favourite) => (\r\n        <FavouriteCard key={favourite.id} favourite={favourite} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\NoResults.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\genreActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Pagination.js",["269","270","271","272","273"],"import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport * as queryString from \"query-string\";\r\n\r\nconst PaginationComponent = ({ currentPage, pages }) => {\r\n  const location = useLocation();\r\n  const params = queryString.parse(location.search);\r\n\r\n  return (\r\n    <Pagination className=\"m-0 justify-content-end\" size=\"sm\">\r\n      <Pagination.First\r\n        disabled={currentPage == 1 ? true : false}\r\n        href={\r\n          location.pathname +\r\n          \"?\" +\r\n          queryString.stringify({\r\n            ...params,\r\n            page: 1,\r\n          })\r\n        }\r\n      />\r\n      <Pagination.Prev\r\n        disabled={currentPage == 1 ? true : false}\r\n        href={\r\n          location.pathname +\r\n          \"?\" +\r\n          queryString.stringify({\r\n            ...params,\r\n            page: Number(currentPage) - 1,\r\n          })\r\n        }\r\n      />\r\n      {pages?.map((element) => (\r\n        <Pagination.Item\r\n          key={element}\r\n          active={element == currentPage ? true : false}\r\n          href={\r\n            location.pathname +\r\n            \"?\" +\r\n            queryString.stringify({\r\n              ...params,\r\n              page: element,\r\n            })\r\n          }\r\n        >\r\n          {element}\r\n        </Pagination.Item>\r\n      ))}\r\n      <Pagination.Next\r\n        disabled={currentPage == pages.length ? true : false}\r\n        href={\r\n          location.pathname +\r\n          \"?\" +\r\n          queryString.stringify({\r\n            ...params,\r\n            page: Number(currentPage) + 1,\r\n          })\r\n        }\r\n      />\r\n      <Pagination.Last\r\n        disabled={currentPage == pages.length ? true : false}\r\n        href={\r\n          location.pathname +\r\n          \"?\" +\r\n          queryString.stringify({\r\n            ...params,\r\n            page: pages.length,\r\n          })\r\n        }\r\n      />\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ForbiddenPage.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ShoppingCart\\ShoppingCartItem.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\AdminLayout\\AdminHeader.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ShoppingCart\\EmptyCart.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\OrderForm\\OrderForm.js",["274"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { Row, Col, Form, Button, InputGroup } from \"react-bootstrap\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { validationSchema } from \"./form-config\";\r\n\r\nimport { Context as ShoppingCartContext } from \"../../context/shoppingCartContext\";\r\nimport { Context as CustomerContext } from \"../../context/customerContext\";\r\nimport { Context } from \"../../context/alertContext\";\r\n\r\nimport { createOrder } from \"../../actions/orderActions\";\r\n\r\nconst OrderForm = () => {\r\n  const { addAlert} = useContext(Context);\r\n  \r\n  const {\r\n    state: { user },\r\n    setCurrentCustomer,\r\n  } = useContext(CustomerContext);\r\n\r\n  const {\r\n    state: { books },\r\n  } = useContext(ShoppingCartContext);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await setCurrentCustomer();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={user}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values) => {\r\n        await createOrder(values, books, addAlert);\r\n        window.location.href = \"/account/history\";\r\n      }}\r\n    >\r\n      {({ handleChange, handleSubmit, values, errors }) => (\r\n        <Form noValidate autoComplete=\"false\" onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              value={values.firstName || \"\"}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.firstName}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.firstName}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              value={values.lastName || \"\"}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.lastName}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.lastName}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={values.email || \"\"}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.email}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.email}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Row}>\r\n            <Col lg={6}>\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                name=\"country\"\r\n                type=\"text\"\r\n                value={values.country || \"\"}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.country}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.country}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                name=\"city\"\r\n                type=\"text\"\r\n                value={values.city || \"\"}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.city}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row}>\r\n            <Col>\r\n              <Form.Label>Street</Form.Label>\r\n              <Form.Control\r\n                name=\"street\"\r\n                type=\"text\"\r\n                value={values.street || \"\"}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.street}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.street}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n            <Col lg={2}>\r\n              <Form.Label>Building</Form.Label>\r\n              <Form.Control\r\n                name=\"buildingNo\"\r\n                type=\"text\"\r\n                value={values.buildingNo || \"\"}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.buildingNo}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.buildingNo}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n            <Col lg={2}>\r\n              <Form.Label>Flat</Form.Label>\r\n              <Form.Control\r\n                name=\"flatNo\"\r\n                type=\"text\"\r\n                value={values.flatNo || \"\"}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.flatNo}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.flatNo}\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Postal code</Form.Label>\r\n            <Form.Control\r\n              name=\"postalCode\"\r\n              type=\"text\"\r\n              value={values.postalCode || \"\"}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.postalCode}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.postalCode}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Phone</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>+375</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                name=\"phoneNumber\"\r\n                type=\"text\"\r\n                value={values.phoneNumber || \"\"}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.phoneNumber}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.phoneNumber}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <Button type=\"submit\">Order</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\AdminLayout\\CardButton.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\GeneralLayout\\Search.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\BookForm.js",["275"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  InputGroup,\r\n  Image,\r\n} from \"react-bootstrap\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport { initialValues, bookSchema } from \"./form-config\";\r\n\r\nimport { Context } from \"../../context/alertContext\";\r\n\r\nimport { getGenres, createGenre } from \"../../actions/genreActions\";\r\nimport { getAuthors, createAuthor } from \"../../actions/authorActions\";\r\nimport { getPublishers, createPublisher } from \"../../actions/publisherActions\";\r\nimport {\r\n  deleteBook,\r\n  updateBook,\r\n  createBook,\r\n  getBook,\r\n} from \"../../actions/bookActions\";\r\n\r\nimport { ReactComponent as DeleteIcon } from \"../../assets/delete.svg\";\r\nimport noImage from \"../../assets/noimage.png\";\r\n\r\nimport DatePicker from \"./form-components/DatePicker\";\r\nimport Select from \"./form-components/Select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nconst BookForm = ({ isbn }) => {\r\n  const { addAlert } = useContext(Context);\r\n  const animatedComponents = makeAnimated();\r\n  const [book, setBook] = useState(initialValues);\r\n  const [genres, setGenres] = useState([]);\r\n  const [authors, setAuthors] = useState([]);\r\n  const [publishers, setPublishers] = useState([]);\r\n  const [cover, setCover] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setGenres(await getGenres(addAlert));\r\n      setAuthors(await getAuthors(addAlert));\r\n      setPublishers(await getPublishers(addAlert));\r\n      if (isbn) {\r\n        const newValues = await getBook(isbn, addAlert);\r\n        delete newValues.publisher_id;\r\n        delete newValues.author_id;\r\n        setBook({\r\n          ...newValues,\r\n          publishers: newValues.bookPublishers?.map((bookPublisher) => {\r\n            return {\r\n              label: bookPublisher.publisher.name,\r\n              value: bookPublisher.publisher.id,\r\n            };\r\n          }),\r\n          authors: newValues.bookAuthors?.map((bookAuthor) => {\r\n            return {\r\n              label: `${bookAuthor.author.firstName} ${bookAuthor.author.lastName}`,\r\n              value: bookAuthor.author.id,\r\n            };\r\n          }),\r\n          genres: newValues.bookGenres?.map((bookGenre) => {\r\n            return { label: bookGenre.genre.name, value: bookGenre.genre.id };\r\n          }),\r\n        });\r\n        setCover(newValues.src);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Row className=\"my-3\">\r\n      <Col>\r\n        <div className=\"panel shadow-sm\">\r\n          <Formik\r\n            onSubmit={async (values) => {\r\n              if (isbn) await updateBook(values, addAlert);\r\n              else await createBook(values, addAlert);\r\n              window.location.href = \"/admin/dashboard\";\r\n            }}\r\n            initialValues={book}\r\n            validationSchema={bookSchema}\r\n            enableReinitialize={true}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              setFieldValue,\r\n              values,\r\n              errors,\r\n            }) => (\r\n              <Form\r\n                noValidate\r\n                autoComplete=\"false\"\r\n                onSubmit={handleSubmit}\r\n                className=\"p-3\"\r\n              >\r\n                <Form.Row className=\"justify-content-end\">\r\n                  {isbn && (\r\n                    <Col xs=\"auto\" className=\"ml-auto\">\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        className=\"d-inline-flex align-items-center\"\r\n                        onClick={async () => {\r\n                          await deleteBook(values.isbn, addAlert);\r\n                          window.location.href = \"/admin/dashboard\";\r\n                        }}\r\n                      >\r\n                        <DeleteIcon fill=\"#fff\" />\r\n                      </Button>\r\n                    </Col>\r\n                  )}\r\n                  <Col xs=\"auto\">\r\n                    <Button type=\"submit\">Save</Button>\r\n                  </Col>\r\n                </Form.Row>\r\n                <Form.Row className=\"justify-content-around\">\r\n                  <Form.Group\r\n                    as={Col}\r\n                    xs={12}\r\n                    sm={4}\r\n                    md={3}\r\n                    xl={2}\r\n                    className=\"d-flex flex-column justify-content-between\"\r\n                  >\r\n                    <Image\r\n                      src={cover ? cover : noImage}\r\n                      fluid\r\n                      className=\"my-auto py-2\"\r\n                    />\r\n                    <Form.File\r\n                      name=\"cover\"\r\n                      label=\"Custom file input\"\r\n                      custom\r\n                      onChange={(event) => {\r\n                        const img = event.target.files[0];\r\n                        if (img) {\r\n                          setCover(URL.createObjectURL(img));\r\n                          setFieldValue(\"cover\", img);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Col\r\n                    xs={12}\r\n                    sm={7}\r\n                    md={8}\r\n                    xl={9}\r\n                    className=\"d-flex flex-column justify-content-between\"\r\n                  >\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>ISBN</Form.Label>\r\n                        <Form.Control\r\n                          name=\"isbn\"\r\n                          type=\"text\"\r\n                          placeholder=\"ISBN\"\r\n                          value={values.isbn}\r\n                          onChange={handleChange}\r\n                          isInvalid={!!errors.isbn}\r\n                          readOnly={isbn ? true : false}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.isbn}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>Genres </Form.Label>\r\n                        <Select\r\n                          id=\"genres\"\r\n                          name=\"genres\"\r\n                          value={values.genres}\r\n                          errors={errors.genres}\r\n                          items={genres}\r\n                          setItems={setGenres}\r\n                          createItem={createGenre}\r\n                          closeMenuOnSelect={false}\r\n                          isMulti\r\n                          options={genres?.map((element) => ({\r\n                            value: element.id,\r\n                            label: element.name,\r\n                          }))}\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                      <Form.Label>Title</Form.Label>\r\n                      <Form.Control\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        placeholder=\"Title\"\r\n                        value={values.title}\r\n                        onChange={handleChange}\r\n                        isInvalid={!!errors.title}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.title}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <Form.Label>Author</Form.Label>\r\n                        </div>\r\n                        <Select\r\n                          id=\"authors\"\r\n                          name=\"authors\"\r\n                          value={values.authors}\r\n                          items={authors}\r\n                          setItems={setAuthors}\r\n                          createItem={createAuthor}\r\n                          errors={errors.authors}\r\n                          components={animatedComponents}\r\n                          closeMenuOnSelect={false}\r\n                          isMulti\r\n                          options={authors?.map((element) => ({\r\n                            value: element?.id,\r\n                            label: `${element?.firstName} ${element?.lastName}`,\r\n                          }))}\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} xs sm={12} md xl>\r\n                        <Form.Label>Publisher</Form.Label>\r\n                        <Select\r\n                          id=\"publishers\"\r\n                          name=\"publishers\"\r\n                          value={values.publishers}\r\n                          items={publishers}\r\n                          setItems={setPublishers}\r\n                          createItem={createPublisher}\r\n                          errors={errors.publishers}\r\n                          components={animatedComponents}\r\n                          closeMenuOnSelect={false}\r\n                          isMulti\r\n                          options={publishers?.map((element) => ({\r\n                            value: element.id,\r\n                            label: element.name,\r\n                          }))}\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>Language</Form.Label>\r\n                        <Form.Control\r\n                          name=\"language\"\r\n                          type=\"text\"\r\n                          placeholder=\"Language\"\r\n                          value={values.language}\r\n                          onChange={handleChange}\r\n                          isInvalid={!!errors.language}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.language}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>Publication date</Form.Label>\r\n                        <DatePicker\r\n                          name=\"publicationDate\"\r\n                          errors={errors.publicationDate}\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>Format</Form.Label>\r\n                        <Form.Control\r\n                          name=\"format\"\r\n                          type=\"text\"\r\n                          placeholder=\"Format\"\r\n                          value={values.format}\r\n                          onChange={handleChange}\r\n                          isInvalid={!!errors.format}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.format}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>Pages</Form.Label>\r\n                        <Form.Control\r\n                          name=\"pages\"\r\n                          type=\"text\"\r\n                          placeholder=\"Pages\"\r\n                          value={values.pages}\r\n                          onChange={handleChange}\r\n                          isInvalid={!!errors.pages}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.pages}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl\r\n                            name=\"price\"\r\n                            type=\"text\"\r\n                            value={values.price}\r\n                            onChange={handleChange}\r\n                            isInvalid={!!errors.price}\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.price}\r\n                          </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} xs={12} sm={12} md xl>\r\n                        <Form.Label>Quantity</Form.Label>\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl\r\n                            name=\"availableQuantity\"\r\n                            type=\"text\"\r\n                            value={values.availableQuantity}\r\n                            onChange={handleChange}\r\n                            isInvalid={!!errors.availableQuantity}\r\n                          />\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.availableQuantity}\r\n                          </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                  </Col>\r\n                </Form.Row>\r\n                <Form.Group>\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    name=\"description\"\r\n                    as=\"textarea\"\r\n                    rows=\"10\"\r\n                    value={values.description}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.description}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.description}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BookForm;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\orderActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\ShoppingCart\\QuantityControl.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Account\\OrderCard.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\OrderForm\\form-config.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\publisherActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\form-config.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\actions\\authorActions.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Account\\FavouriteCard.js",["276"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\r\n\r\nimport noImage from \"../../assets/noimage.png\";\r\n\r\nimport { Context as ShoppingCartContext } from \"../../context/shoppingCartContext\";\r\nimport { Context } from \"../../context/alertContext\";\r\n\r\nimport { getBook } from \"../../actions/bookActions\";\r\nimport { deleteFavourite } from \"../../actions/favouriteBookActions\";\r\n\r\nconst FavouriteCard = ({ favourite }) => {\r\n  const { addAlert } = useContext(Context);\r\n  const [book, setBook] = useState();\r\n  const [inCart, setInCart] = useState(false);\r\n  const { addItem, isInCart } = useContext(ShoppingCartContext);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const book = await getBook(favourite.bookISBN, addAlert);\r\n      setBook(book);\r\n      setInCart(isInCart(book.isbn));\r\n    })();\r\n  }, [favourite.bookISBN]);\r\n\r\n  return (\r\n    <Container fluid=\"md\" className=\"px-0 border-top\">\r\n      {book && (\r\n        <Row className=\"py-2\">\r\n          <Col className=\"col-auto\">\r\n            <div className=\"d-flex flex-row\">\r\n              <Image\r\n                className=\"mx-auto\"\r\n                width=\"130px\"\r\n                src={book.src ? book.src : noImage}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <h5>{book.title}</h5>\r\n            <h6>\r\n              {book.bookAuthors?.map(\r\n                (bookAuthor) =>\r\n                  ` ${bookAuthor.author.firstName} ${bookAuthor.author.lastName},`\r\n              )}\r\n            </h6>\r\n            <span>\r\n              {book.format}, {book.language}\r\n            </span>\r\n            <br />\r\n            <span>{book.publicationDate}</span>\r\n            <h5 className=\"text-pink my-1\">{book.price} $</h5>\r\n          </Col>\r\n          <Col xs={12} className=\"d-flex flex-row justify-content-between mt-2\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={() => {\r\n                deleteFavourite(favourite.bookISBN, addItem);\r\n                setBook();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              disabled={book.availableQuantity === 0 || inCart ? true : false}\r\n              onClick={() => {\r\n                addItem(book);\r\n                setInCart(true);\r\n              }}\r\n            >\r\n              {inCart ? \"Book is already in cart\" : \"Add to cart\"}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FavouriteCard;\r\n","D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\form-components\\Select.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\BookForm\\form-components\\DatePicker.js",[],"D:\\Study\\bookstore\\bookstore-frontend\\src\\components\\Account\\OrderItem.js",["277"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nimport noImage from \"../../assets/noimage.png\";\r\n\r\nimport { Context } from \"../../context/alertContext\";\r\n\r\nimport { getBook } from \"../../actions/bookActions\";\r\n\r\nconst OrderItem = ({ orderDetail, totalSum, setTotalSum }) => {\r\n  const { addAlert } = useContext(Context);\r\n  const [book, setBook] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const book = await getBook(orderDetail.bookISBN, addAlert);\r\n      setBook(book);\r\n      setTotalSum(totalSum + orderDetail.amount * book.price);\r\n    })();\r\n  }, [orderDetail.bookISBN, orderDetail.amount, setTotalSum]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {book && (\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between my-1\">\r\n          <div className=\"d-flex flex-row\">\r\n            <Image width=\"80px\" src={book.src ? book.src : noImage} />\r\n            <div className=\"px-2\">\r\n              <h5>{book.title}</h5>\r\n              <h6>\r\n                {book.bookAuthors?.map(\r\n                  (bookAuthor) =>\r\n                    ` ${bookAuthor.author.firstName} ${bookAuthor.author.lastName},`\r\n                )}\r\n              </h6>\r\n              <span>\r\n                {book.format}, {book.language}\r\n              </span>\r\n              <br />\r\n              <span>{book.publicationDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-row flex-fill mt-2 mt-md-0\">\r\n            <div className=\"ml-md-auto\">x {orderDetail.amount}</div>\r\n            <div className=\"ml-auto\">{book.price * orderDetail.amount}$</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n",{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":17,"nodeType":"284","messageId":"285","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"287","line":12,"column":1,"nodeType":"288","endLine":31,"endColumn":3},{"ruleId":"289","severity":1,"message":"290","line":1,"column":42,"nodeType":"291","messageId":"292","endLine":1,"endColumn":52,"fix":"293"},{"ruleId":"289","severity":1,"message":"294","line":1,"column":54,"nodeType":"291","messageId":"292","endLine":1,"endColumn":70,"fix":"295"},{"ruleId":"296","severity":1,"message":"297","line":20,"column":6,"nodeType":"298","endLine":20,"endColumn":8,"suggestions":"299"},{"ruleId":"282","severity":1,"message":"300","line":7,"column":8,"nodeType":"284","messageId":"285","endLine":7,"endColumn":13},{"ruleId":"282","severity":1,"message":"301","line":11,"column":10,"nodeType":"284","messageId":"285","endLine":11,"endColumn":17},{"ruleId":"296","severity":1,"message":"302","line":35,"column":6,"nodeType":"298","endLine":35,"endColumn":12,"suggestions":"303"},{"ruleId":"282","severity":1,"message":"304","line":32,"column":23,"nodeType":"284","messageId":"285","endLine":32,"endColumn":37},{"ruleId":"296","severity":1,"message":"305","line":53,"column":6,"nodeType":"298","endLine":53,"endColumn":8,"suggestions":"306"},{"ruleId":"282","severity":1,"message":"304","line":24,"column":23,"nodeType":"284","messageId":"285","endLine":24,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":44,"column":6,"nodeType":"298","endLine":51,"endColumn":4,"suggestions":"307"},{"ruleId":"296","severity":1,"message":"297","line":17,"column":6,"nodeType":"298","endLine":17,"endColumn":8,"suggestions":"308"},{"ruleId":"296","severity":1,"message":"309","line":34,"column":6,"nodeType":"298","endLine":34,"endColumn":8,"suggestions":"310"},{"ruleId":"296","severity":1,"message":"297","line":17,"column":6,"nodeType":"298","endLine":17,"endColumn":8,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":13,"column":31,"nodeType":"314","messageId":"315","endLine":13,"endColumn":33},{"ruleId":"312","severity":1,"message":"313","line":24,"column":31,"nodeType":"314","messageId":"315","endLine":24,"endColumn":33},{"ruleId":"312","severity":1,"message":"313","line":37,"column":27,"nodeType":"314","messageId":"315","endLine":37,"endColumn":29},{"ruleId":"312","severity":1,"message":"313","line":51,"column":31,"nodeType":"314","messageId":"315","endLine":51,"endColumn":33},{"ruleId":"312","severity":1,"message":"313","line":62,"column":31,"nodeType":"314","messageId":"315","endLine":62,"endColumn":33},{"ruleId":"296","severity":1,"message":"309","line":30,"column":6,"nodeType":"298","endLine":30,"endColumn":8,"suggestions":"316"},{"ruleId":"296","severity":1,"message":"317","line":74,"column":6,"nodeType":"298","endLine":74,"endColumn":8,"suggestions":"318"},{"ruleId":"296","severity":1,"message":"302","line":25,"column":6,"nodeType":"298","endLine":25,"endColumn":26,"suggestions":"319"},{"ruleId":"296","severity":1,"message":"320","line":20,"column":6,"nodeType":"298","endLine":20,"endColumn":61,"suggestions":"321"},"no-native-reassign",["322"],"no-negated-in-lhs",["323"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-rename","Destructuring assignment type unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"324","text":"325"},"Destructuring assignment message unnecessarily renamed.",{"range":"326","text":"327"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addAlert'. Either include it or remove the dependency array.","ArrayExpression",["328"],"'Alert' is defined but never used.","'Context' is defined but never used.","React Hook useEffect has missing dependencies: 'addAlert' and 'isInCart'. Either include them or remove the dependency array.",["329"],"'setCurrentPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addAlert', 'availability', 'currentPage', 'keyword', 'params.genre', 'params.orderBy', and 'price'. Either include them or remove the dependency array.",["330"],["331"],["332"],"React Hook useEffect has a missing dependency: 'setCurrentCustomer'. Either include it or remove the dependency array.",["333"],["334"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["335"],"React Hook useEffect has missing dependencies: 'addAlert' and 'isbn'. Either include them or remove the dependency array.",["336"],["337"],"React Hook useEffect has missing dependencies: 'addAlert' and 'totalSum'. Either include them or remove the dependency array.",["338"],"no-global-assign","no-unsafe-negation",[41,51],"type",[53,69],"message",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"339","fix":"347"},{"desc":"348","fix":"349"},{"desc":"339","fix":"350"},{"desc":"348","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [addAlert]",{"range":"358","text":"359"},"Update the dependencies array to be: [addAlert, isInCart, isbn]",{"range":"360","text":"361"},"Update the dependencies array to be: [addAlert, availability, currentPage, keyword, params.genre, params.orderBy, price]",{"range":"362","text":"363"},"Update the dependencies array to be: [addAlert, currentPage, params.genre, params.orderBy, setAvailableCount, setNotAvailableCount, setTotalCount]",{"range":"364","text":"365"},{"range":"366","text":"359"},"Update the dependencies array to be: [setCurrentCustomer]",{"range":"367","text":"368"},{"range":"369","text":"359"},{"range":"370","text":"368"},"Update the dependencies array to be: [addAlert, isbn]",{"range":"371","text":"372"},"Update the dependencies array to be: [addAlert, favourite.bookISBN, isInCart]",{"range":"373","text":"374"},"Update the dependencies array to be: [orderDetail.bookISBN, orderDetail.amount, setTotalSum, addAlert, totalSum]",{"range":"375","text":"376"},[561,563],"[addAlert]",[1270,1276],"[addAlert, isInCart, isbn]",[1706,1708],"[addAlert, availability, currentPage, keyword, params.genre, params.orderBy, price]",[1320,1455],"[addAlert, currentPage, params.genre, params.orderBy, setAvailableCount, setNotAvailableCount, setTotalCount]",[465,467],[1020,1022],"[setCurrentCustomer]",[504,506],[836,838],[2407,2409],"[addAlert, isbn]",[887,907],"[addAlert, favourite.bookISBN, isInCart]",[634,689],"[orderDetail.bookISBN, orderDetail.amount, setTotalSum, addAlert, totalSum]"]